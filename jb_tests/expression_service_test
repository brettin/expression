use strict;
use Data::Dumper;
use Bio::KBase::ExpressionServices::ExpressionServicesClient;
#FOR STARMAN
my $client = Bio::KBase::ExpressionServices::ExpressionServicesClient->new("http://localhost:7075");
#FOR PLACKUP NOTE WILL HAVE RUN PLACKUP IN ANOTHER WINDOW 
#(In other window do next 4 lines) and then uncomment 5th line and comment out the above line
#Log into your instance
#sudo su
#source /kb/deployment/user-env.sh
#plackup --listen :9999 /kb/dev_container/modules/expression/lib/ExpressionServices.psgi 
#my $client = Bio::KBase::ExpressionServices::ExpressionServicesClient->new("http://localhost:9999"); 

my $result;
print "get_expression_samples_data()\n";
#$result = $client->get_expression_samples_data([]);
#$result = $client->get_expression_samples_data(['kb|sample.95']);
#$result = $client->get_expression_samples_data(['kb|sample.2','kb|sample.3']);
#print Dumper($result) . "\n----------------------------\n";

#get_expression_samples_data_by_series_ids\
print "get_expression_samples_data_by_series_ids()\n";
#$result = $client->get_expression_samples_data_by_series_ids(['kb|series.1','kb|series.0']);
#print Dumper($result) . "\n----------------------------\n";

#get_expression_samples_data_by_experimental_unit_ids
print "get_expression_samples_data_by_experimental_unit_ids()\n";
#$result = $client->get_expression_samples_data_by_experimental_unit_ids(['kb|expu.3167770','kb|expu.3167762']);
#print Dumper($result) . "\n----------------------------\n";

#get_expression_samples_data_by_experiment_meta_ids 
#print "get_expression_samples_data_by_experiment_meta_ids()\n"; 
#$result = $client->get_expression_samples_data_by_experiment_meta_ids(['kb|expm.16','kb|expm.15']); 
#print Dumper($result) . "\n----------------------------\n"; 

#get_expression_samples_data_by_strain_ids
print "get_expression_samples_data_by_strain_ids()\n";
#$result = $client->get_expression_samples_data_by_strain_ids(['kb|str.7634','kb|str.999'],'microarray');
#$result = $client->get_expression_samples_data_by_strain_ids(['kb|str.999'],'microarray');
#print Dumper($result) . "\n----------------------------\n";

#get_expression_samples_data_by_genome_ids
print "get_expression_samples_data_by_genome_ids()\n";
#$result = $client->get_expression_samples_data_by_genome_ids(['kb|g.20848','kb|g.0'],'microarray','Y');
#$result = $client->get_expression_samples_data_by_genome_ids(['kb|g.20848','kb|g.0'],'microarray','N');
#$result = $client->get_expression_samples_data_by_genome_ids(['kb|g.20848','kb|g.0'],'RNA-Seq','Y');
#$result = $client->get_expression_samples_data_by_genome_ids(['kb|g.0'],'microarray','Y');
#print Dumper($result) . "\n----------------------------\n";
 
#get_expression_sample_data_by_ontology_ids 
print "get_expression_samples_data_by_ontology_ids()\n"; 
#$result = $client->get_expression_samples_data_by_ontology_ids(['ENVO:02000086'],'or','kb|g.20848','microarray','Y'); 
#$result = $client->get_expression_samples_data_by_ontology_ids(['ENVO:02000086','PO:0030086'],'and','kb|g.20848','microarray','Y'); 
#$result = $client->get_expression_samples_data_by_ontology_ids(['ENVO:02000086','PO:0030086','PO:0030085'],'and','kb|g.20848','microarray','Y'); 
#$result = $client->get_expression_samples_data_by_ontology_ids(['ENVO:02000086','PO:0030086','PO:0030085'],'or','kb|g.20848','microarray','Y'); 
#print Dumper($result) . "\n----------------------------\n"; 

#get_expression_data_by_feature_ids
print "get_expression_data_by_feature_ids()\n";
#$result = $client->get_expression_data_by_feature_ids(['kb|g.20848.CDS.1800','kb|g.20848.CDS.1687'],'microarray','Y');
#print Dumper($result) . "\n----------------------------\n";

#compare_samples 
print "compare_samples()\n"; 
#$result = $client->compare_samples({	'numerator1'=>{'feature1'=>1,'feature2'=>2,'feature3'=>3},
#					'numerator2'=>{'feature1'=>-1,'feature2'=>0,'feature3'=>0.5}},
#				   {    'denominator1'=>{'feature1'=>1.5,'feature2'=>2,'feature3'=>-1},
#                                        'denominator2'=>{'feature1'=>-.5,'feature2'=>0}});
#$result = $client->compare_samples({   'numerator1'=>{'feature1'=>1,'feature2'=>2}, 
#                                       'numerator2'=>{'feature1'=>-1,'feature2'=>0,'feature3'=>0.5}}, 
#                                  {    'denominator1'=>{'feature1'=>1.5,'feature2'=>2,'feature3'=>-1}, 
#                                        'denominator2'=>{'feature1'=>-.5,'feature2'=>0}}); 
#$result = $client->compare_samples({   'numerator1'=>{'feature1'=>1,'feature2'=>2}, 
#                                       'numerator2'=>{'feature1'=>-1,'feature2'=>0,'feature3'=>0.5}}, 
#                                  {    'denominator1'=>{'feature1'=>1.5,'feature2'=>2}, 
#                                        'denominator2'=>{'feature1'=>-.5,'feature2'=>0}}); 
print Dumper($result) . "\n----------------------------\n";

#compare_samples_vs_default_controls 
print "compare_samples_vs_default_controls()\n"; 
#$result = $client->compare_samples_vs_default_controls(['kb|sample.3','kb|sample.8','kb|sample.1']); 
#print Dumper($result) . "\n----------------------------\n"; 

#compare_samples_vs_the_average
print "compare_samples_vs_the_average()\n";
#$result = $client->compare_samples_vs_the_average(['kb|sample.3','kb|sample.8','kb|sample.1'],
#	['kb|sample.3','kb|sample.8','kb|sample.1']);
#$result = $client->compare_samples_vs_the_average(['kb|sample.3','kb|sample.8','kb|sample.1'],['kb|sample.1']);
#$result = $client->compare_samples_vs_the_average(['kb|sample.3','kb|sample.8','kb|sample.1'],[]);
#print Dumper($result) . "\n----------------------------\n";

#getOnOffCalls
#print "get_on_off_calls()\n";
#$result = $client->get_on_off_calls($client->compare_samples({   'numerator1'=>{'feature1'=>1,'feature2'=>2,'feature3'=>3},
#                                       'numerator2'=>{'feature1'=>-1,'feature2'=>0,'feature3'=>0.5}},
#                                  {    'denominator1'=>{'feature1'=>1.5,'feature2'=>2,'feature3'=>-1},
#                                        'denominator2'=>{'feature1'=>-.5,'feature2'=>0}}),-1,1); 
#print Dumper($result) . "\n----------------------------\n";

#get_top_changers
print "get_top_changers()\n"; 
#$result = $client->get_top_changers($client->compare_samples_vs_default_controls(['kb|sample.3','kb|sample.8','kb|sample.1']),'BOTH',10);
#$result = $client->get_top_changers($client->compare_samples_vs_default_controls(['kb|sample.3','kb|sample.8','kb|sample.1']),'UP',6);
$result = $client->get_top_changers($client->compare_samples_vs_default_controls(['kb|sample.3','kb|sample.8','kb|sample.1']),'DOWN',10);
#print Dumper($result) . "\n----------------------------\n";



print "FINAL PRINT\n".Dumper($result) . "\n----------------------------\n";



